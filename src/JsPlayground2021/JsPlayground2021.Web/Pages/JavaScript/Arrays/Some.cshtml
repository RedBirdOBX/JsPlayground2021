@page

@using JsPlayground2021.Web.Data.Enums
@using JsPlayground.Pages.Javascript.Arrays

@model SomeModel

@{
    Layout = "~/Pages/Shared/_PageLayout.cshtml";
}

@{
    ViewData["Title"] = "some()";
}

@section LibraryHeader {JavaScript}
@section PageName {some()}

@section Menu
{
    <partial name="_MenuContainer" model="MenuType.Javascipt" />
}

<p class="text-center">
    <a href="https://www.w3schools.com/jsref/jsref_obj_array.asp" target="_blank">
        https://www.w3schools.com/jsref/jsref_obj_array.asp
    </a>
</p>

<p>
    The <code>some()</code> method checks if any of the elements in an array pass a test (provided as a function). The difference between this
    and something like <code>.map()</code> or <code>find()</code> is that <code>some()</code> returns a <strong>Boolean</strong>. True if any of the elements in the array pass the test,
    otherwise it returns false.  Think of it as a "contains" function.
</p>

<p>
    The <code>some()</code> method executes the function once for each element present in the array.
</p>

<p>
    <code>some()</code> does not execute the function for empty arrays.
</p>

<p>
    <code>some()</code> does not change the original array.
</p>

<pre>
<code>
$(function ()
{
    let hasClarke = authors.some((author) => { return author.name.toLowerCase() === "arthur c clarke" });
    $("#demo1").html("Did we find Arthur C Clarke? " + hasClarke);
});
</code>
</pre>

<div class="card text-white bg-info mt-1">
    <div class="card-body">
        <div class="small my-0"><em>results:</em></div>
        <div id="demo1"></div>
    </div>
</div>

<p>&nbsp;</p>

<p>&nbsp;</p>


@section Scripts
{
    <script src="~/assets/javascripts/SampleAuthorsArray.js"></script>
    <script>
        $(function () {
            let hasClarke = authors.some((author) => { return author.name.toLowerCase() === "arthur c clarke" });
            $("#demo1").html("Did we find Arthur C Clarke? " + hasClarke);
        });
    </script>
}
