@page

@using JsPlayground2021.Web.Data.Enums
@using JsPlayground.Pages.Javascript.Arrays

@model ValueOfModel

@{
    Layout = "~/Pages/Shared/_PageLayout.cshtml";
}

@{
    ViewData["Title"] = "valueOf()";
}

@section LibraryHeader {JavaScript}
@section PageName {valueOf()}

@section Menu
{
    <partial name="_MenuContainer" model="MenuType.Javascipt" />
}

<p class="text-center">
    <a href="https://www.w3schools.com/jsref/jsref_obj_array.asp" target="_blank">
        https://www.w3schools.com/jsref/jsref_obj_array.asp
    </a>
</p>

<p>
    The valueOf() method is the default behavior for an array. It converts an array to a primitive value. JavaScript will
    automatically convert an array to a string when a primitive value is expected. Because of this, all these examples will
    produce the same result.
</p>

<pre>
<code>
let fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits;

let fruits2 = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo2").innerHTML = fruits2.valueOf();

let fruits3 = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo3").innerHTML = fruits3.toString();
</code>
</pre>


<div class="card text-white bg-info mt-1">
    <div class="card-body">
        <div class="small my-0"><em>results:</em></div>
        <div id="demo"></div>
        <div id="demo2"></div>
        <div id="demo3"></div>
    </div>
</div>

<p>&nbsp;</p>

<p>&nbsp;</p>

@section Scripts
{
    <script>
        let fruits = ["Banana", "Orange", "Apple", "Mango"];
        document.getElementById("demo").innerHTML = fruits;

        let fruits2 = ["Banana", "Orange", "Apple", "Mango"];
        document.getElementById("demo2").innerHTML = fruits2.valueOf();

        let fruits3 = ["Banana", "Orange", "Apple", "Mango"];
        document.getElementById("demo3").innerHTML = fruits3.toString();
    </script>
}
